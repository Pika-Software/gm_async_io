name: Build
on:
  push:
    branches:
      - main
    paths:
      - '**.hpp'
      - '**.h'
      - '**.cpp'
      - '**.c'
      - '**.cmake'
      - '**.txt'
      - '.github/workflows/build.yml'
  workflow_dispatch:
  pull_request:

jobs:
  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: '[x32] Download garrysmod_common'
        uses: actions/checkout@v3
        with:
          repository: 'dankmolot/garrysmod_common'
          ref: 'master-cmake'
          submodules: 'recursive'
          path: 'third-party/garrysmod_common'

      - name: '[x32] Configure project (Serverside)'
        run: |
          cmake -B build -S . -A Win32 `
            -DGARRYSMOD_COMMON_PATH="third-party/garrysmod_common" `
            -DAUTOINSTALL="." `
            -DBUILD_SHARED_LIBS=OFF

      - name: '[x32] Build project (Serverside)'
        run: cmake --build build --config Release -j

      - name: '[x32] Configure project (Clientside)'
        run: cmake -B build -S . -DCLIENT_DLL=ON

      - name: '[x32] Build project (Clientside)'
        run: cmake --build build --config Release -j

      - name: '[x64] Download garrysmod_common'
        uses: actions/checkout@v3
        with:
          repository: 'dankmolot/garrysmod_common'
          ref: 'x86-64-cmake'
          submodules: 'recursive'
          path: 'third-party/garrysmod_common64'

      - name: '[x64] Configure project (Serverside)'
        run: |
          cmake -B build -S . -A x64 `
            -DGARRYSMOD_COMMON_PATH="third-party/garrysmod_common64" `
            -DAUTOINSTALL="." `
            -DBUILD_SHARED_LIBS=OFF

      - name: '[x64] Build project (Serverside)'
        run: cmake --build build --config Release -j

      - name: '[x64] Configure project (Clientside)'
        run: cmake -B build -S . -DCLIENT_DLL=ON

      - name: '[x64] Build project (Clientside)'
        run: cmake --build build --config Release -j

      - name: "Upload artifacts"
        uses: actions/upload-artifact@v3
        with:
          name: Windows
          path: |
            ./*.dll
          if-no-files-found: error
